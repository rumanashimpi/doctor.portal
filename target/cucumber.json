[
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 1147900,
              "status": "passed"
            },
            "match": {
              "location": "BeforeActionsHook.setUp()"
            }
          }
        ],
        "line": 34,
        "name": "",
        "description": "",
        "id": "verify-patient-can-enroll-for--monthly-membership-while-registration;;;2",
        "after": [
          {
            "result": {
              "duration": 735353100,
              "status": "passed"
            },
            "match": {
              "location": "AfterActionsHook.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9782815200,
              "status": "passed"
            },
            "line": 7,
            "name": "Patient was on login page",
            "match": {
              "location": "MembershipSteps.patientWasOnLoginPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 590138100,
              "status": "passed"
            },
            "line": 8,
            "name": "Patient click on signup button",
            "match": {
              "location": "MembershipSteps.patient_click_on_signup_button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 104498800,
              "status": "passed"
            },
            "line": 9,
            "name": "Patient should be navigated to invite code page and able to see \"see our memberships scheme\" option",
            "match": {
              "arguments": [
                {
                  "val": "see our memberships scheme",
                  "offset": 65
                }
              ],
              "location": "MembershipSteps.patientShouldBeNavigatedToInviteCodePageAndAbleToSeeOption(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 121028200,
              "status": "passed"
            },
            "line": 10,
            "name": "Patient click on see our membership scheme button",
            "match": {
              "location": "MembershipSteps.patientClickOnSeeOurMembershipSchemeButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 56911200,
              "status": "passed"
            },
            "line": 11,
            "name": "Patient should be navigated to membership page with \"Memberships\" title",
            "match": {
              "arguments": [
                {
                  "val": "Memberships",
                  "offset": 53
                }
              ],
              "location": "MembershipSteps.patientShouldBeNavigatedToMembershipPageWithTitle(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 266899100,
              "status": "passed"
            },
            "line": 12,
            "name": "Click on LGP membership scheme button",
            "match": {
              "location": "MembershipSteps.click_on_LGP_membership_scheme_button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 269315800,
              "status": "passed"
            },
            "line": 13,
            "name": "Patient should be able to view monthly membership scheme",
            "match": {
              "location": "MembershipSteps.patient_should_be_able_to_view_monthly_membership_scheme()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 120897400,
              "status": "passed"
            },
            "line": 14,
            "name": "Patient select monthly scheme and click on Apply for Membership button",
            "match": {
              "location": "MembershipSteps.patient_select_monthly_scheme_and_click_on_Apply_for_Membership_button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 103571600,
              "status": "passed"
            },
            "line": 15,
            "name": "Patient should be navigated to disclaimer page with \"Disclaimer\" and \"Fees\"",
            "match": {
              "arguments": [
                {
                  "val": "Disclaimer",
                  "offset": 53
                },
                {
                  "val": "Fees",
                  "offset": 70
                }
              ],
              "location": "MembershipSteps.patientShouldBeNavigatedToDisclaimerPageWithAnd(String,String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 401717000,
              "status": "passed"
            },
            "line": 16,
            "name": "Patient accept conditions and click on Apply for Membership",
            "match": {
              "location": "MembershipSteps.patient_accept_conditions_and_click_on_Apply_for_Membership()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 40973800,
              "status": "passed"
            },
            "line": 17,
            "name": "Patient should be navigated to register page with title \"Register\"",
            "match": {
              "arguments": [
                {
                  "val": "Register",
                  "offset": 57
                }
              ],
              "location": "MembershipSteps.patientShouldBeNavigatedToRegisterPageWithTitle(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1744578000,
              "status": "passed"
            },
            "line": 18,
            "name": "provide below details for registration",
            "match": {
              "location": "MembershipSteps.provide_below_details_for_registration(DataTable)"
            },
            "matchedColumns": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9
            ],
            "rows": [
              {
                "cells": [
                  "Password",
                  "Bananaapps123$"
                ],
                "line": 20
              },
              {
                "cells": [
                  "First Name",
                  "sree"
                ],
                "line": 21
              },
              {
                "cells": [
                  "Last Name",
                  "lella"
                ],
                "line": 22
              },
              {
                "cells": [
                  "Day",
                  "20"
                ],
                "line": 23
              },
              {
                "cells": [
                  "Month",
                  "Aug"
                ],
                "line": 24
              },
              {
                "cells": [
                  "Year",
                  "1985"
                ],
                "line": 25
              },
              {
                "cells": [
                  "Email Address",
                  "lellasreelakshmi123@gmail.com"
                ],
                "line": 26
              },
              {
                "cells": [
                  "Postcode",
                  "SL3 8DD"
                ],
                "line": 27
              },
              {
                "cells": [
                  "Mobile Phone Number (required)",
                  "07543571654"
                ],
                "line": 28
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 94573600,
              "status": "passed"
            },
            "line": 29,
            "name": "click on Next button",
            "match": {
              "location": "RegloginMeddbaseSteps.click_on_Next_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 303311000,
              "status": "passed"
            },
            "line": 30,
            "name": "User should be in Confirm details page",
            "match": {
              "location": "MembershipSteps.userShouldBeInConfirmDetailsPage()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 111900,
              "status": "passed"
            },
            "match": {
              "location": "BeforeActionsHook.setUp()"
            }
          }
        ],
        "line": 38,
        "name": "verify Patient can view membership details",
        "description": "",
        "id": "verify-patient-can-enroll-for--monthly-membership-while-registration;verify-patient-can-view-membership-details",
        "after": [
          {
            "result": {
              "duration": 413600,
              "error_message": "org.openqa.selenium.NoSuchSessionException: Session ID is null. Using WebDriver after calling quit()?\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-1EBNG06\u0027, ip: \u0027192.168.0.72\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: driver.version: RemoteWebDriver\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:125)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)\r\n\tat stepDefinitions.AfterActionsHook.tearDown(AfterActionsHook.java:30)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat cucumber.api.testng.AbstractTestNGCucumberTests.feature(AbstractTestNGCucumberTests.java:21)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:110)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "AfterActionsHook.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 14414600,
              "error_message": "org.openqa.selenium.NoSuchSessionException: Session ID is null. Using WebDriver after calling quit()?\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-1EBNG06\u0027, ip: \u0027192.168.0.72\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: driver.version: RemoteWebDriver\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:125)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:277)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteNavigation.to(RemoteWebDriver.java:857)\r\n\tat pageObjects.loginPage.NavigateToUrl(loginPage.java:58)\r\n\tat stepDefinitions.NotificationsSteps.patient_was_on_homepage(NotificationsSteps.java:22)\r\n\tat ✽.Given Patient was on homepage(src/test/java/features/membership.feature:40)\r\n",
              "status": "failed"
            },
            "line": 40,
            "name": "Patient was on homepage",
            "match": {
              "location": "NotificationsSteps.patient_was_on_homepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 41,
            "name": "Patient clicks on \"Memberships\" in menu",
            "match": {
              "arguments": [
                {
                  "val": "Memberships",
                  "offset": 19
                }
              ],
              "location": "InvoicesSteps.patientClicksOnInMenu(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 42,
            "name": "he should be able to view the following details with title \"Current Membership\"",
            "match": {
              "arguments": [
                {
                  "val": "Current Membership",
                  "offset": 60
                }
              ],
              "location": "MembershipSteps.heShouldBeAbleToViewTheFollowingDetailsWithTitle(String,String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Billing frequency: Monthly"
                ],
                "line": 43
              },
              {
                "cells": [
                  "Net Price: 50 £"
                ],
                "line": 44
              },
              {
                "cells": [
                  "VAT: 0 £"
                ],
                "line": 45
              },
              {
                "cells": [
                  "Gross Price: 50 £"
                ],
                "line": 46
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 37,
            "name": "@details"
          }
        ]
      }
    ],
    "name": "Verify Patient can enroll for  monthly membership while Registration",
    "description": "\r\nPatient will enroll for monthly membership while Registration\r\nthen Patient should be able to see monthly LGP membership scheme in membership page",
    "id": "verify-patient-can-enroll-for--monthly-membership-while-registration",
    "keyword": "Feature",
    "uri": "src/test/java/features/membership.feature"
  }
]